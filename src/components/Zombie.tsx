/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three';
import React, { useRef, useEffect } from 'react';
import { useGLTF, useAnimations } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
    nodes: {
        WhiteClown: THREE.SkinnedMesh;
        Hips: THREE.Bone;
    };
    materials: {
        WhiteClown_material: THREE.MeshStandardMaterial;
    };
};

type ActionName = 'jump';
type GLTFActions = Record<ActionName, THREE.AnimationAction>;

export default function Zombie({ ...props }: JSX.IntrinsicElements['group']) {
    const group = useRef<THREE.Group>();
    const { nodes, materials, animations } = useGLTF('/zombie.gltf') as GLTFResult;
    const { actions } = useAnimations<GLTFActions>(animations, group);
    useEffect(() => {
        // actions.jump.play();
    });
    return (
        <group ref={group} {...props} dispose={null}>
            <group>
                <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
                    <primitive object={nodes.Hips} />
                    <skinnedMesh
                        geometry={nodes.WhiteClown.geometry}
                        material={materials.WhiteClown_material}
                        skeleton={nodes.WhiteClown.skeleton}
                    />
                </group>
            </group>
        </group>
    );
}

useGLTF.preload('/zombie.gltf');
